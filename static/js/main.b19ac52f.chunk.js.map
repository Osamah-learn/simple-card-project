{"version":3,"sources":["components/Card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monester","id","name","email","Cardlist","monesters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFields","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","monister","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,6BACtB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCAVC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,UAAUC,KAAI,SAACN,GAAD,OACnB,cAAC,EAAD,CAAyBA,SAAUA,GAAvBA,EAASC,UCRhBM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OAEI,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,aAAcF,EAAEG,OAAOC,SAZvC,EAAKC,MAAQ,CACXb,UAAW,GACXU,aAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,UAAWkB,S,oBAMhD,WAAU,IAAD,EAC6BC,KAAKN,MAAjCb,EADD,EACCA,UAAWU,EADZ,EACYA,aACbU,EAAmBpB,EAAUqB,QAAO,SAACC,GAAD,OACxCA,EAASzB,KAAK0B,cAAcC,SAASd,EAAaa,kBAGpD,OACE,sBAAK/B,UAAU,MAAf,UACA,mDACE,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,UAAWoB,W,GA/BXK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b19ac52f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-style.css\"\r\nexport const Card = props =>(\r\n    <div className=\"card-container\">\r\n    <img alt=\"Monster\" src={`https://robohash.org/${props.monester.id}?set1=set2&size=180x180`}></img>\r\n    <h2>{props.monester.name}</h2>\r\n    <p>{props.monester.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport { Card } from \"../Card/Card.component\";\r\n\r\n\r\n\r\nexport const Cardlist = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monesters.map((monester) => (\r\n        <Card  key={monester.id} monester={monester}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport \"../searchBox/searchBox.css\"\r\nexport const SearchBox = ({placeholder,handleChange}) => {\r\n    return (\r\n        \r\n        <input className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />    \r\n        \r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Cardlist } from \"./components/card-list/Card-list.component.jsx\";\nimport { SearchBox } from \"./components/searchBox/searchBox.component.jsx\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monesters: [],\n      searchFields: \"\",\n    };\n    \n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monesters: users }));\n  }\n  handleChange = e=> {\n    this.setState({ searchFields: e.target.value });\n  }\n\n  render() {\n    const { monesters, searchFields } = this.state; // its like const monsters = this.state.monesters and const searchFields = this.state.searchFields\n    const FilteredMonsters = monesters.filter((monister) =>\n      monister.name.toLowerCase().includes(searchFields.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters Cardlist</h1>\n        <SearchBox\n          placeholder=\"SearchMonister\"\n          handleChange={this.handleChange}\n        />\n        <Cardlist monesters={FilteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}